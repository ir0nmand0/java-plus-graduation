services:
  discovery-server:
    build: infra/discovery-server
    container_name: discovery-server
    ports:
      - "8761:8761"
    networks:
      - ewm-net
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SERVER_PORT=8761
    healthcheck:
      test: "curl --fail --silent discovery-server:8761/actuator/health | grep UP || exit 1"
      timeout: 5s
      interval: 20s
      retries: 5

  config-server:
    build: infra/config-server
    container_name: config-server
    depends_on:
      discovery-server:
        condition: service_healthy
    networks:
      - ewm-net
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SERVER_PORT=9091
    healthcheck:
      test: "curl --fail --silent config-server:9091/actuator/health | grep UP || exit 1"
      timeout: 5s
      interval: 30s
      retries: 5

  gateway-server:
    build: infra/gateway-server
    container_name: gateway-server
    ports:
      - "8080:8080"
    depends_on:
      config-server:
        condition: service_healthy
      category-service:
        condition: service_healthy
      compilation-service:
        condition: service_healthy
      event-service:
        condition: service_healthy
      location-service:
        condition: service_healthy
      request-service:
        condition: service_healthy
      user-service:
        condition: service_healthy
      aggregator-service:
        condition: service_healthy
      analyzer-service:
        condition: service_healthy
      collector-service:
        condition: service_healthy
    networks:
      - ewm-net
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SERVER_PORT=8080
      - SPRING_PROFILES_ACTIVE=dev
    healthcheck:
      test: "curl --fail --silent gateway-server:8080/actuator/health | grep UP || exit 1"
      timeout: 5s
      interval: 20s
      retries: 5

  stats-server:
    build: stats/stats-server
    container_name: ewm-stats-server
    ports:
      - "9090:9090"
    depends_on:
      stats-db:
        condition: service_healthy
      config-server:
        condition: service_healthy
    networks:
      - ewm-net
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://stats-db:5432/ewm-stats
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SERVER_PORT=9090
      - SPRING_PROFILES_ACTIVE=dev
    healthcheck:
      test: "curl --fail --silent stats-server:9090/actuator/health | grep UP || exit 1"
      timeout: 5s
      interval: 15s
      retries: 10

  stats-db:
    image: postgres:16.1
    container_name: postgres-ewm-stats-db
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=root
      - POSTGRES_DB=ewm-stats
    networks:
      - ewm-net
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 10s
      retries: 15

  category-service:
    build: core/category-service
    container_name: ewm-category-service
    depends_on:
      config-server:
        condition: service_healthy
      stats-server:
        condition: service_healthy
      category-db:
        condition: service_healthy
    networks:
      - ewm-net
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://category-db:5432/category-db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SERVER_PORT=8081
      - SPRING_PROFILES_ACTIVE=dev
      - STATS-SERVER_URL=http://stats-server:9090
    healthcheck:
      test: "curl --fail --silent category-service:8081/actuator/health | grep UP || exit 1"
      timeout: 5s
      interval: 25s
      retries: 10

  compilation-service:
    build: core/compilation-service
    container_name: ewm-compilation-service
    depends_on:
      config-server:
        condition: service_healthy
      compilation-db:
        condition: service_healthy
    networks:
      - ewm-net
    environment:
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SERVER_PORT=8082
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://compilation-db:5432/compilation-db
    healthcheck:
      test: "curl --fail --silent compilation-service:8082/actuator/health | grep UP || exit 1"
      timeout: 5s
      interval: 25s
      retries: 10

  event-service:
    build: core/event-service
    container_name: ewm-event-service
    depends_on:
      config-server:
        condition: service_healthy
      event-db:
        condition: service_healthy
    networks:
      - ewm-net
    environment:
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SERVER_PORT=8083
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://event-db:5432/event-db
    healthcheck:
      test: "curl --fail --silent event-service:8083/actuator/health | grep UP || exit 1"
      timeout: 5s
      interval: 25s
      retries: 10

  location-service:
    build: core/location-service
    container_name: ewm-location-service
    depends_on:
      config-server:
        condition: service_healthy
      location-db:
        condition: service_healthy
    networks:
      - ewm-net
    environment:
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SERVER_PORT=8084
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://location-db:5432/location-db
    healthcheck:
      test: "curl --fail --silent location-service:8084/actuator/health | grep UP || exit 1"
      timeout: 5s
      interval: 25s
      retries: 10

  request-service:
    build: core/request-service
    container_name: ewm-request-service
    depends_on:
      config-server:
        condition: service_healthy
      request-db:
        condition: service_healthy
    networks:
      - ewm-net
    environment:
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SERVER_PORT=8085
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://request-db:5432/request-db
    healthcheck:
      test: "curl --fail --silent request-service:8085/actuator/health | grep UP || exit 1"
      timeout: 5s
      interval: 25s
      retries: 10

  user-service:
    build: core/user-service
    container_name: ewm-user-service
    depends_on:
      config-server:
        condition: service_healthy
      user-db:
        condition: service_healthy
    networks:
      - ewm-net
    environment:
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SERVER_PORT=8086
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://user-db:5432/user-db
    healthcheck:
      test: "curl --fail --silent user-service:8086/actuator/health | grep UP || exit 1"
      timeout: 5s
      interval: 25s
      retries: 10

  # Kafka и связанные сервисы
  kafka:
    image: confluentinc/confluent-local:7.8.0
    hostname: kafka
    container_name: kafka
    ports:
      - "${KAFKA_PORT:-9092}:9092"
      - "${KAFKA_CONTROLLER_PORT:-29093}:29093"
    networks:
      - ewm-net
    restart: unless-stopped
    environment:
      # Базовые настройки
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_NODE_ID: 1

      # Исправленные настройки слушателей - разные порты для разных интерфейсов
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:9092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:29092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092'

      # Явно указываем карту протоколов для слушателей
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'

      # Остальные настройки
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: kafka
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      CLUSTER_ID: 'K0EA9p0yEe6MkAAAAkKsEg'

      # Путь для хранения данных
      KAFKA_LOG_DIRS: '/var/lib/kafka/data'
    volumes:
      - kafka-data:/var/lib/kafka/data
    healthcheck:
      test: [ "CMD", "kafka-topics", "--bootstrap-server", "kafka:9092", "--list" ]
      interval: 30s
      timeout: 10s
      retries: 5

  schema-registry:
    image: confluentinc/cp-schema-registry:7.8.0
    hostname: schema-registry
    container_name: schema-registry
    ports:
      - "9102:9102"
    networks:
      - ewm-net
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'PLAINTEXT://kafka:9092'
      SCHEMA_REGISTRY_HOST_NAME: 'schema-registry'
      SCHEMA_REGISTRY_LISTENERS: 'http://0.0.0.0:9102'
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9102/subjects" ]
      interval: 30s
      timeout: 10s
      retries: 5

  kafka-init-topics:
    image: confluentinc/confluent-local:7.8.0
    container_name: kafka-init-topics
    depends_on:
      kafka:
        condition: service_healthy
    command: >
      bash -c '
        echo "Waiting for Kafka to be ready..."
        cub kafka-ready -b kafka:9092 1 30
        echo "Creating topics..."
        kafka-topics --create --if-not-exists --bootstrap-server kafka:9092 --topic stats.user-actions.v1 --partitions 1 --replication-factor 1
        kafka-topics --create --if-not-exists --bootstrap-server kafka:9092 --topic stats.events-similarity.v1 --partitions 1 --replication-factor 1
        echo "Topics created."
      '
    init: true
    networks:
      - ewm-net
    healthcheck:
      test: [ "CMD", "kafka-topics", "--bootstrap-server", "kafka:9092", "--list" ]
      interval: 30s
      timeout: 10s
      retries: 3

  # Рекомендательные сервисы
  collector-service:
    build: recommendation/collector
    container_name: ewm-collector-service
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    networks:
      - ewm-net
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SERVER_PORT=8087
      - SPRING_PROFILES_ACTIVE=dev
    healthcheck:
      test: "curl --fail --silent collector-service:8087/actuator/health | grep UP || exit 1"
      timeout: 5s
      interval: 25s
      retries: 10

  aggregator-service:
    build: recommendation/aggregator
    container_name: ewm-aggregator-service
    depends_on:
      schema-registry:
        condition: service_healthy
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    networks:
      - ewm-net
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SERVER_PORT=8088
      - SPRING_PROFILES_ACTIVE=dev
    healthcheck:
      test: "curl --fail --silent aggregator-service:8088/actuator/health | grep UP || exit 1"
      timeout: 5s
      interval: 25s
      retries: 10

  analyzer-service:
    build: recommendation/analyzer
    container_name: ewm-analyzer-service
    depends_on:
      analyzer-db:
        condition: service_healthy
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    networks:
      - ewm-net
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://analyzer-db:5432/analyzer-db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SERVER_PORT=8089
      - SPRING_PROFILES_ACTIVE=dev
    healthcheck:
      test: "curl --fail --silent analyzer-service:8089/actuator/health | grep UP || exit 1"
      timeout: 5s
      interval: 25s
      retries: 10

  analyzer-db:
    image: postgres:16.1
    container_name: postgres-analyzer-db
    networks:
      - ewm-net
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=root
      - POSTGRES_DB=analyzer-db
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 10s
      retries: 15

  category-db:
    image: postgres:16.1
    container_name: postgres-category-db
    networks:
      - ewm-net
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=root
      - POSTGRES_DB=category-db
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 10s
      retries: 15

  compilation-db:
    image: postgres:16.1
    container_name: postgres-compilation-db
    networks:
      - ewm-net
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=root
      - POSTGRES_DB=compilation-db
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 10s
      retries: 15

  event-db:
    image: postgres:16.1
    container_name: postgres-event-db
    networks:
      - ewm-net
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=root
      - POSTGRES_DB=event-db
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 10s
      retries: 15

  location-db:
    image: postgres:16.1
    container_name: postgres-location-db
    networks:
      - ewm-net
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=root
      - POSTGRES_DB=location-db
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 10s
      retries: 15

  request-db:
    image: postgres:16.1
    container_name: postgres-request-db
    networks:
      - ewm-net
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=root
      - POSTGRES_DB=request-db
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 10s
      retries: 15

  user-db:
    image: postgres:16.1
    container_name: postgres-user-db
    networks:
      - ewm-net
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=root
      - POSTGRES_DB=user-db
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 10s
      retries: 15
      
  service-sync:
    image: alpine:latest
    container_name: service-sync
    command: >
      sh -c "
        echo 'Waiting for gateway to be fully operational...'
        sleep 30
        echo 'Making sure all services are registered in Eureka...'
        sleep 30
        echo 'Validating service discovery...'
        wget -q --spider http://gateway-server:8080/actuator/health || exit 1
        echo 'All services should now be properly registered and discoverable!'
      "
    depends_on:
      gateway-server:
        condition: service_healthy
    networks:
      - ewm-net

volumes:
  kafka-data:

networks:
  ewm-net: